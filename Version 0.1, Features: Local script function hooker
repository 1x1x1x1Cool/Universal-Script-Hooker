local _Method = "Kick"
local _Check = "LocalPlayer"
local Script_constants = {}
local Functions = {}
local Wanted_script = {}

for i,v2 in pairs(game:GetDescendants()) do
   if v2:IsA("LocalScript") then
       local success,currscript = pcall(function() return getprotos(getscriptclosure(v2)) end)
       if success then
           for index,v in pairs(currscript) do
               for i,b in pairs(getconstants(v)) do
                   if b == _Method then
                       print(b .. " found at:" .. v2.Name)
                       table.insert(Functions, v)
                       table.insert(Wanted_script, v2)
                       table.insert(Script_constants, i)
                   end
               end
           end
       end
   end
end
print(#Script_constants.. " constants Found!")

local scripttohook = {}
for i,v in pairs(Script_constants) do
   print(Wanted_script[i], _Method .. " at function", getinfo(Functions[i]).name, Functions[i])
   if Script_constants[Script_constants[i] - 2] == _Check or Script_constants[Script_constants[i] - 1] == _Check then
       warn(_Method, "on " .. _Check .. " found!", "script name:" , Wanted_script[i])
       table.insert(scripttohook, Wanted_script[i])
   end
end

local X;
X = hookmetamethod(game, "__namecall", function(self,...)
   local args = {...};
   local method = getnamecallmethod()
   if method == _Method and table.find(scripttohook, self) then
       return;
   end
   return X(self,...)
end)
